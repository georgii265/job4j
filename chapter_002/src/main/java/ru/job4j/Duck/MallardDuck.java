package ru.job4j.Duck;

/**
 * В этом коде мы наследуемся от класса Duck и добавляем свой код, который будет отвечать за наше приложение.
 * В коде это пишется как extends, после которого указываете имя базового класса.
 * Тем самым мы получаем доступ ко всем полям и методам базового класса.
 * Используя наследование, можно создать общий класс, которые определяет характеристики, общие для набора связанных элементов.
 * Главный наследуемый класс в Java называют суперклассом.
 * Наследующий класс называют подклассом.
 * Получается, что подкласс - это специализированная версия суперкласса,
 * которая наследует все члены суперкласса и добавляет свои собственные уникальные элементы.
 */
public class MallardDuck  extends Duck {

    public MallardDuck() {
        /**
         * вызов метода performQuack,унаследованного классом MallardDuck;
         * метод делегирует выполнение  операции  по ссылке на QuackBehavior (т.е. вызывает quck()
         * через унаследованную переменную  quackBehavior)
         *
         * MallardDuck использует класс Quack для выполнеия действия,так что при вызове performQuack()
         * ответсвтенность за выполнение возлагается на обьект Quack
         */
        quackBehavior = new Quack();
        flyBehavior = new FlyWithWings();//Затем тоже самое происходит  с методом  performFly(),так же унаследованным классом MallardDuck.
    }
    public void display() {
        System.out.println(" I'm real Mallard duck");
    }
}
